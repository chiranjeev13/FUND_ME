{
  "address": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "s_priceFeedAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "MINIMUM_USD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "cheaperWithdraw",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "get_i_owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "funder",
          "type": "address"
        }
      ],
      "name": "get_s_addressToAmountFunded",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "get_s_funders",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "get_s_priceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0xd5c712ddbaa1eecfd85eab149a76d75ea0919a6f15e60920751ed47f3f2432af",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
    "transactionIndex": 0,
    "gasUsed": "1059953",
    "logsBloom": "0x
    "blockHash": "0xf43defa5df93ec644e361265b4f6d8559c39be2209258c3946ca8b8d7b103692",
    "transactionHash": "0xd5c712ddbaa1eecfd85eab149a76d75ea0919a6f15e60920751ed47f3f2432af",
    "logs": [],
    "blockNumber": 2,
    "cumulativeGasUsed": "1059953",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x5FbDB2315678afecb367f032d93F642f64180aa3"
  ],
  "numDeployments": 1,
  "solcInputHash": "a2d6ab840df071ee46356ad0811e8785",
  "metadata": "{\"compiler\":{\"version\":\"0.8.8+commit.dddeac2f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"s_priceFeedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"MINIMUM_USD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cheaperWithdraw\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"get_i_owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"funder\",\"type\":\"address\"}],\"name\":\"get_s_addressToAmountFunded\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"get_s_funders\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"get_s_priceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundMe.sol\":\"FundMe\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  // getRoundData and latestRoundData should both raise \\\"No data present\\\"\\n  // if they do not have data to report, instead of returning unset values\\n  // which could be misinterpreted as actual reported values.\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0xf2b6c9adb3552254df1445b73563cf014434ff5e78663e9b961b6c059506ceb5\",\"license\":\"MIT\"},\"contracts/FundMe.sol\":{\"content\":\"//Get funds from users\\n//Withdraw Funds\\n//Set a Minimum funding value in USD\\n\\n//SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\nimport \\\"./PriceConverter.sol\\\";\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\n\\n//859593\\n//836747\\ncontract FundMe {\\n    using PriceConvert for uint256;\\n\\n    uint256 public constant MINIMUM_USD = 20;\\n    address[] private s_funders;\\n    mapping(address => uint256) private s_addressToAmountFunded;\\n\\n    AggregatorV3Interface private s_priceFeed;\\n\\n    function fund() public payable {\\n        //want to set minimum usd\\n        s_funders.push(msg.sender);\\n        require(\\n            msg.value.getConversionRate(s_priceFeed) >= MINIMUM_USD,\\n            \\\"Didnt send enough\\\"\\n        );\\n        s_addressToAmountFunded[msg.sender] += msg.value;\\n    }\\n\\n    address private immutable i_owner;\\n\\n    constructor(address s_priceFeedAddress) {\\n        i_owner = msg.sender;\\n        s_priceFeed = AggregatorV3Interface(s_priceFeedAddress);\\n    }\\n\\n    function withdraw() public onlyOwner {\\n        for (\\n            uint256 funderindex = 0;\\n            funderindex < s_funders.length;\\n            funderindex++\\n        ) {\\n            address fundrs = s_funders[funderindex];\\n            s_addressToAmountFunded[fundrs] = 0;\\n        }\\n        s_funders = new address[](0);\\n        (bool callSuccess, ) = payable(msg.sender).call{\\n            value: address(this).balance\\n        }(\\\"\\\");\\n        require(callSuccess, \\\"Call Failer\\\");\\n    }\\n\\n    modifier onlyOwner() {\\n        require(msg.sender == i_owner, \\\"Sender not Owner\\\");\\n        _;\\n    }\\n\\n    // receive() external payable {\\n    //     fund();\\n    // }\\n\\n    // fallback() external payable {\\n    //     fund();\\n    // }\\n    function cheaperWithdraw() public payable onlyOwner {\\n        address[] memory funders = s_funders;\\n        for (\\n            uint256 funderIndex = 0;\\n            funderIndex < funders.length;\\n            funderIndex++\\n        ) {\\n            address funder = funders[funderIndex];\\n            s_addressToAmountFunded[funder] = 0;\\n        }\\n        s_funders = new address[](0);\\n        (bool callSuccess, ) = payable(msg.sender).call{\\n            value: address(this).balance\\n        }(\\\"\\\");\\n        require(callSuccess, \\\"Call Failer\\\");\\n    }\\n\\n    function get_s_funders(uint256 index) public view returns (address) {\\n        return s_funders[index];\\n    }\\n\\n    function get_s_addressToAmountFunded(address funder)\\n        public\\n        view\\n        returns (uint256)\\n    {\\n        return s_addressToAmountFunded[funder];\\n    }\\n\\n    function get_s_priceFeed() public view returns (AggregatorV3Interface) {\\n        return s_priceFeed;\\n    }\\n\\n    function get_i_owner() public view returns (address) {\\n        return i_owner;\\n    }\\n}\\n\",\"keccak256\":\"0x961fcfc5a4f4b0d7e5c0578dd47e0c83f1902876026441a1c4c2608d6b6b18e1\",\"license\":\"MIT\"},\"contracts/PriceConverter.sol\":{\"content\":\"//SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\n\\nlibrary PriceConvert {\\n    function getPrice(AggregatorV3Interface priceFeed)\\n        internal\\n        view\\n        returns (uint256)\\n    {\\n        // Rinkeby ETH / USD Address\\n        // https://docs.chain.link/docs/ethereum-addresses/\\n\\n        (, int256 answer, , , ) = priceFeed.latestRoundData();\\n        // ETH/USD rate in 18 digit\\n        return uint256(answer * 10000000000);\\n    }\\n\\n    function getVersion() internal view returns (uint256) {\\n        AggregatorV3Interface priceFeed = AggregatorV3Interface(\\n            0x8A753747A1Fa494EC906cE90E9f37563A8AF630e\\n        );\\n        return priceFeed.version();\\n    }\\n\\n    function getConversionRate(\\n        uint256 ethAmount,\\n        AggregatorV3Interface priceFeed\\n    ) internal view returns (uint256) {\\n        uint256 ethPrice = getPrice(priceFeed);\\n        uint256 ethAmountInUsd = (ethPrice * ethAmount) / 1000000000000000000;\\n        // the actual ETH/USD conversion rate, after adjusting the extra 0s.\\n        return ethAmountInUsd;\\n    }\\n}\\n\",\"keccak256\":\"0x08c20862b231d677e41db348f7a2d974080a5dd4ce06e8ae2c9e20ceca5363ca\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60a06040523480156200001157600080fd5b506040516200134f3803806200134f833981810160405281019062000037919062000120565b3373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1660601b8152505080600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505062000152565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620000e882620000bb565b9050919050565b620000fa81620000db565b81146200010657600080fd5b50565b6000815190506200011a81620000ef565b92915050565b600060208284031215620001395762000138620000b6565b5b6000620001498482850162000109565b91505092915050565b60805160601c6111d06200017f60003960008181610219015281816105e3015261089201526111d06000f3fe60806040526004361061007b5760003560e01c80639b7f03fe1161004e5780639b7f03fe1461012a578063b60d428814610167578063be2693f014610171578063d707c0291461017b5761007b565b806312120698146100805780633b23fde8146100ab5780633ccfd60b146100e85780636b69a592146100ff575b600080fd5b34801561008c57600080fd5b506100956101a6565b6040516100a29190610ab8565b60405180910390f35b3480156100b757600080fd5b506100d260048036038101906100cd9190610b0e565b6101d0565b6040516100df9190610b5c565b60405180910390f35b3480156100f457600080fd5b506100fd610217565b005b34801561010b57600080fd5b50610114610460565b6040516101219190610b86565b60405180910390f35b34801561013657600080fd5b50610151600480360381019061014c9190610bcd565b610465565b60405161015e9190610b86565b60405180910390f35b61016f6104ae565b005b6101796105e1565b005b34801561018757600080fd5b5061019061088e565b60405161019d9190610b5c565b60405180910390f35b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008082815481106101e5576101e4610bfa565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146102a5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161029c90610c86565b60405180910390fd5b60005b6000805490508110156103505760008082815481106102ca576102c9610bfa565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061034890610cd5565b9150506102a8565b50600067ffffffffffffffff81111561036c5761036b610d1e565b5b60405190808252806020026020018201604052801561039a5781602001602082028036833780820191505090505b50600090805190602001906103b0929190610992565b5060003373ffffffffffffffffffffffffffffffffffffffff16476040516103d790610d7e565b60006040518083038185875af1925050503d8060008114610414576040519150601f19603f3d011682016040523d82523d6000602084013e610419565b606091505b505090508061045d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161045490610ddf565b60405180910390fd5b50565b601481565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6000339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506014610548600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16346108b690919063ffffffff16565b1015610589576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161058090610e4b565b60405180910390fd5b34600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546105d89190610e6b565b92505081905550565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461066f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161066690610c86565b60405180910390fd5b6000808054806020026020016040519081016040528092919081815260200182805480156106f257602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116106a8575b5050505050905060005b815181101561077d57600082828151811061071a57610719610bfa565b5b602002602001015190506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061077590610cd5565b9150506106fc565b50600067ffffffffffffffff81111561079957610798610d1e565b5b6040519080825280602002602001820160405280156107c75781602001602082028036833780820191505090505b50600090805190602001906107dd929190610992565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161080490610d7e565b60006040518083038185875af1925050503d8060008114610841576040519150601f19603f3d011682016040523d82523d6000602084013e610846565b606091505b505090508061088a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161088190610ddf565b60405180910390fd5b5050565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6000806108c2836108f2565b90506000670de0b6b3a764000085836108db9190610ec1565b6108e59190610f4a565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561093b57600080fd5b505afa15801561094f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109739190611008565b5050509150506402540be4008161098a9190611083565b915050919050565b828054828255906000526020600020908101928215610a0b579160200282015b82811115610a0a5782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550916020019190600101906109b2565b5b509050610a189190610a1c565b5090565b5b80821115610a35576000816000905550600101610a1d565b5090565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000610a7e610a79610a7484610a39565b610a59565b610a39565b9050919050565b6000610a9082610a63565b9050919050565b6000610aa282610a85565b9050919050565b610ab281610a97565b82525050565b6000602082019050610acd6000830184610aa9565b92915050565b600080fd5b6000819050919050565b610aeb81610ad8565b8114610af657600080fd5b50565b600081359050610b0881610ae2565b92915050565b600060208284031215610b2457610b23610ad3565b5b6000610b3284828501610af9565b91505092915050565b6000610b4682610a39565b9050919050565b610b5681610b3b565b82525050565b6000602082019050610b716000830184610b4d565b92915050565b610b8081610ad8565b82525050565b6000602082019050610b9b6000830184610b77565b92915050565b610baa81610b3b565b8114610bb557600080fd5b50565b600081359050610bc781610ba1565b92915050565b600060208284031215610be357610be2610ad3565b5b6000610bf184828501610bb8565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600082825260208201905092915050565b7f53656e646572206e6f74204f776e657200000000000000000000000000000000600082015250565b6000610c70601083610c29565b9150610c7b82610c3a565b602082019050919050565b60006020820190508181036000830152610c9f81610c63565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610ce082610ad8565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610d1357610d12610ca6565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610d68600083610d4d565b9150610d7382610d58565b600082019050919050565b6000610d8982610d5b565b9150819050919050565b7f43616c6c204661696c6572000000000000000000000000000000000000000000600082015250565b6000610dc9600b83610c29565b9150610dd482610d93565b602082019050919050565b60006020820190508181036000830152610df881610dbc565b9050919050565b7f4469646e742073656e6420656e6f756768000000000000000000000000000000600082015250565b6000610e35601183610c29565b9150610e4082610dff565b602082019050919050565b60006020820190508181036000830152610e6481610e28565b9050919050565b6000610e7682610ad8565b9150610e8183610ad8565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610eb657610eb5610ca6565b5b828201905092915050565b6000610ecc82610ad8565b9150610ed783610ad8565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610f1057610f0f610ca6565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610f5582610ad8565b9150610f6083610ad8565b925082610f7057610f6f610f1b565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610f9a81610f7b565b8114610fa557600080fd5b50565b600081519050610fb781610f91565b92915050565b6000819050919050565b610fd081610fbd565b8114610fdb57600080fd5b50565b600081519050610fed81610fc7565b92915050565b60008151905061100281610ae2565b92915050565b600080600080600060a0868803121561102457611023610ad3565b5b600061103288828901610fa8565b955050602061104388828901610fde565b945050604061105488828901610ff3565b935050606061106588828901610ff3565b925050608061107688828901610fa8565b9150509295509295909350565b600061108e82610fbd565b915061109983610fbd565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04821160008413600084131616156110d8576110d7610ca6565b5b817f8000000000000000000000000000000000000000000000000000000000000000058312600084126000841316161561111557611114610ca6565b5b827f8000000000000000000000000000000000000000000000000000000000000000058212600084136000841216161561115257611151610ca6565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff058212600084126000841216161561118f5761118e610ca6565b5b82820290509291505056fea2646970667358221220461d6422c067424eeb25cc6977894e091d52b71128d7deb55b9736aa13863d2164736f6c63430008080033",
  "deployedBytecode": "0x60806040526004361061007b5760003560e01c80639b7f03fe1161004e5780639b7f03fe1461012a578063b60d428814610167578063be2693f014610171578063d707c0291461017b5761007b565b806312120698146100805780633b23fde8146100ab5780633ccfd60b146100e85780636b69a592146100ff575b600080fd5b34801561008c57600080fd5b506100956101a6565b6040516100a29190610ab8565b60405180910390f35b3480156100b757600080fd5b506100d260048036038101906100cd9190610b0e565b6101d0565b6040516100df9190610b5c565b60405180910390f35b3480156100f457600080fd5b506100fd610217565b005b34801561010b57600080fd5b50610114610460565b6040516101219190610b86565b60405180910390f35b34801561013657600080fd5b50610151600480360381019061014c9190610bcd565b610465565b60405161015e9190610b86565b60405180910390f35b61016f6104ae565b005b6101796105e1565b005b34801561018757600080fd5b5061019061088e565b60405161019d9190610b5c565b60405180910390f35b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008082815481106101e5576101e4610bfa565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146102a5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161029c90610c86565b60405180910390fd5b60005b6000805490508110156103505760008082815481106102ca576102c9610bfa565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061034890610cd5565b9150506102a8565b50600067ffffffffffffffff81111561036c5761036b610d1e565b5b60405190808252806020026020018201604052801561039a5781602001602082028036833780820191505090505b50600090805190602001906103b0929190610992565b5060003373ffffffffffffffffffffffffffffffffffffffff16476040516103d790610d7e565b60006040518083038185875af1925050503d8060008114610414576040519150601f19603f3d011682016040523d82523d6000602084013e610419565b606091505b505090508061045d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161045490610ddf565b60405180910390fd5b50565b601481565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6000339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506014610548600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16346108b690919063ffffffff16565b1015610589576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161058090610e4b565b60405180910390fd5b34600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546105d89190610e6b565b92505081905550565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461066f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161066690610c86565b60405180910390fd5b6000808054806020026020016040519081016040528092919081815260200182805480156106f257602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116106a8575b5050505050905060005b815181101561077d57600082828151811061071a57610719610bfa565b5b602002602001015190506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061077590610cd5565b9150506106fc565b50600067ffffffffffffffff81111561079957610798610d1e565b5b6040519080825280602002602001820160405280156107c75781602001602082028036833780820191505090505b50600090805190602001906107dd929190610992565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161080490610d7e565b60006040518083038185875af1925050503d8060008114610841576040519150601f19603f3d011682016040523d82523d6000602084013e610846565b606091505b505090508061088a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161088190610ddf565b60405180910390fd5b5050565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6000806108c2836108f2565b90506000670de0b6b3a764000085836108db9190610ec1565b6108e59190610f4a565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561093b57600080fd5b505afa15801561094f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109739190611008565b5050509150506402540be4008161098a9190611083565b915050919050565b828054828255906000526020600020908101928215610a0b579160200282015b82811115610a0a5782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550916020019190600101906109b2565b5b509050610a189190610a1c565b5090565b5b80821115610a35576000816000905550600101610a1d565b5090565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000610a7e610a79610a7484610a39565b610a59565b610a39565b9050919050565b6000610a9082610a63565b9050919050565b6000610aa282610a85565b9050919050565b610ab281610a97565b82525050565b6000602082019050610acd6000830184610aa9565b92915050565b600080fd5b6000819050919050565b610aeb81610ad8565b8114610af657600080fd5b50565b600081359050610b0881610ae2565b92915050565b600060208284031215610b2457610b23610ad3565b5b6000610b3284828501610af9565b91505092915050565b6000610b4682610a39565b9050919050565b610b5681610b3b565b82525050565b6000602082019050610b716000830184610b4d565b92915050565b610b8081610ad8565b82525050565b6000602082019050610b9b6000830184610b77565b92915050565b610baa81610b3b565b8114610bb557600080fd5b50565b600081359050610bc781610ba1565b92915050565b600060208284031215610be357610be2610ad3565b5b6000610bf184828501610bb8565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600082825260208201905092915050565b7f53656e646572206e6f74204f776e657200000000000000000000000000000000600082015250565b6000610c70601083610c29565b9150610c7b82610c3a565b602082019050919050565b60006020820190508181036000830152610c9f81610c63565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610ce082610ad8565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610d1357610d12610ca6565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610d68600083610d4d565b9150610d7382610d58565b600082019050919050565b6000610d8982610d5b565b9150819050919050565b7f43616c6c204661696c6572000000000000000000000000000000000000000000600082015250565b6000610dc9600b83610c29565b9150610dd482610d93565b602082019050919050565b60006020820190508181036000830152610df881610dbc565b9050919050565b7f4469646e742073656e6420656e6f756768000000000000000000000000000000600082015250565b6000610e35601183610c29565b9150610e4082610dff565b602082019050919050565b60006020820190508181036000830152610e6481610e28565b9050919050565b6000610e7682610ad8565b9150610e8183610ad8565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610eb657610eb5610ca6565b5b828201905092915050565b6000610ecc82610ad8565b9150610ed783610ad8565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610f1057610f0f610ca6565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610f5582610ad8565b9150610f6083610ad8565b925082610f7057610f6f610f1b565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610f9a81610f7b565b8114610fa557600080fd5b50565b600081519050610fb781610f91565b92915050565b6000819050919050565b610fd081610fbd565b8114610fdb57600080fd5b50565b600081519050610fed81610fc7565b92915050565b60008151905061100281610ae2565b92915050565b600080600080600060a0868803121561102457611023610ad3565b5b600061103288828901610fa8565b955050602061104388828901610fde565b945050604061105488828901610ff3565b935050606061106588828901610ff3565b925050608061107688828901610fa8565b9150509295509295909350565b600061108e82610fbd565b915061109983610fbd565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04821160008413600084131616156110d8576110d7610ca6565b5b817f8000000000000000000000000000000000000000000000000000000000000000058312600084126000841316161561111557611114610ca6565b5b827f8000000000000000000000000000000000000000000000000000000000000000058212600084136000841216161561115257611151610ca6565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff058212600084126000841216161561118f5761118e610ca6565b5b82820290509291505056fea2646970667358221220461d6422c067424eeb25cc6977894e091d52b71128d7deb55b9736aa13863d2164736f6c63430008080033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 58,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_funders",
        "offset": 0,
        "slot": "0",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 62,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_addressToAmountFunded",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 65,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_priceFeed",
        "offset": 0,
        "slot": "2",
        "type": "t_contract(AggregatorV3Interface)45"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_contract(AggregatorV3Interface)45": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}