{
  "address": "0x8bBbf8B5E476A31AE7273db956Fc3E09541ddBCe",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "priceFeedAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [],
      "name": "MINIMUM_USD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "addressToAmountFunded",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "funders",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "i_owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "priceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0x76cb880b733095c21689f7a965633fd83095e3a6117d757163143bfb0e24c6ca",
  "receipt": {
    "to": null,
    "from": "0xCa284608E2452131467d97bFC0A599E86303fe88",
    "contractAddress": "0x8bBbf8B5E476A31AE7273db956Fc3E09541ddBCe",
    "transactionIndex": 14,
    "gasUsed": "899473",
    "logsBloom": "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
    "blockHash": "0x87cad8c10ea9a5284b023b77a2b5ec58eabf1b5d7d93d6548349350c98138929",
    "transactionHash": "0x76cb880b733095c21689f7a965633fd83095e3a6117d757163143bfb0e24c6ca",
    "logs": [],
    "blockNumber": 11044386,
    "cumulativeGasUsed": "13605451",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x8A753747A1Fa494EC906cE90E9f37563A8AF630e"
  ],
  "numDeployments": 1,
  "solcInputHash": "cc38502d8cf7f57ecbc043b4d1bc1972",
  "metadata": "{\"compiler\":{\"version\":\"0.8.8+commit.dddeac2f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"priceFeedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"MINIMUM_USD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"addressToAmountFunded\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"funders\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"i_owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"priceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundMe.sol\":\"FundMe\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  // getRoundData and latestRoundData should both raise \\\"No data present\\\"\\n  // if they do not have data to report, instead of returning unset values\\n  // which could be misinterpreted as actual reported values.\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0xf2b6c9adb3552254df1445b73563cf014434ff5e78663e9b961b6c059506ceb5\",\"license\":\"MIT\"},\"contracts/FundMe.sol\":{\"content\":\"//Get funds from users\\n//Withdraw Funds\\n//Set a Minimum funding value in USD\\n\\n//SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\nimport \\\"./PriceConverter.sol\\\";\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\n\\n//859593\\n//836747\\ncontract FundMe {\\n    using PriceConvert for uint256;\\n\\n    uint256 public constant MINIMUM_USD = 20;\\n    address[] public funders;\\n    mapping(address => uint256) public addressToAmountFunded;\\n\\n    AggregatorV3Interface public priceFeed;\\n\\n    function fund() public payable {\\n        //want to set minimum usd\\n        funders.push(msg.sender);\\n        require(\\n            msg.value.getConversionRate(priceFeed) >= MINIMUM_USD,\\n            \\\"Didnt send enough\\\"\\n        );\\n        addressToAmountFunded[msg.sender] += msg.value;\\n    }\\n\\n    address public immutable i_owner;\\n\\n    constructor(address priceFeedAddress) {\\n        i_owner = msg.sender;\\n        priceFeed = AggregatorV3Interface(priceFeedAddress);\\n    }\\n\\n    function withdraw() public onlyOwner {\\n        for (\\n            uint256 funderindex = 0;\\n            funderindex < funders.length;\\n            funderindex++\\n        ) {\\n            address fundrs = funders[funderindex];\\n            addressToAmountFunded[fundrs] = 0;\\n        }\\n        funders = new address[](0);\\n        (bool callSuccess, ) = payable(msg.sender).call{\\n            value: address(this).balance\\n        }(\\\"\\\");\\n        require(callSuccess, \\\"Call Failer\\\");\\n    }\\n\\n    modifier onlyOwner() {\\n        require(msg.sender == i_owner, \\\"Sender not Owner\\\");\\n        _;\\n    }\\n\\n    receive() external payable {\\n        fund();\\n    }\\n\\n    fallback() external payable {\\n        fund();\\n    }\\n}\\n\",\"keccak256\":\"0xffcccc8bf852d02b851a64acc2797c0f3bdf712dbff5ef3995a2886c7e6c946c\",\"license\":\"MIT\"},\"contracts/PriceConverter.sol\":{\"content\":\"//SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\n\\nlibrary PriceConvert {\\n    function getPrice(AggregatorV3Interface priceFeed)\\n        internal\\n        view\\n        returns (uint256)\\n    {\\n        // Rinkeby ETH / USD Address\\n        // https://docs.chain.link/docs/ethereum-addresses/\\n\\n        (, int256 answer, , , ) = priceFeed.latestRoundData();\\n        // ETH/USD rate in 18 digit\\n        return uint256(answer * 10000000000);\\n    }\\n\\n    function getVersion() internal view returns (uint256) {\\n        AggregatorV3Interface priceFeed = AggregatorV3Interface(\\n            0x8A753747A1Fa494EC906cE90E9f37563A8AF630e\\n        );\\n        return priceFeed.version();\\n    }\\n\\n    function getConversionRate(\\n        uint256 ethAmount,\\n        AggregatorV3Interface priceFeed\\n    ) internal view returns (uint256) {\\n        uint256 ethPrice = getPrice(priceFeed);\\n        uint256 ethAmountInUsd = (ethPrice * ethAmount) / 1000000000000000000;\\n        // the actual ETH/USD conversion rate, after adjusting the extra 0s.\\n        return ethAmountInUsd;\\n    }\\n}\\n\",\"keccak256\":\"0x08c20862b231d677e41db348f7a2d974080a5dd4ce06e8ae2c9e20ceca5363ca\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60a060405234801561001057600080fd5b506040516200104d3803806200104d83398181016040528101906100349190610115565b3373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1660601b8152505080600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050610142565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006100e2826100b7565b9050919050565b6100f2816100d7565b81146100fd57600080fd5b50565b60008151905061010f816100e9565b92915050565b60006020828403121561012b5761012a6100b2565b5b600061013984828501610100565b91505092915050565b60805160601c610ee562000168600039600081816102de015261056a0152610ee56000f3fe6080604052600436106100745760003560e01c8063741bef1a1161004e578063741bef1a1461010c578063b60d428814610137578063dba6335f14610141578063dc0d3dff1461016c57610083565b80633ccfd60b1461008d5780633e47d6f3146100a45780636b69a592146100e157610083565b36610083576100816101a9565b005b61008b6101a9565b005b34801561009957600080fd5b506100a26102dc565b005b3480156100b057600080fd5b506100cb60048036038101906100c691906107b1565b610525565b6040516100d891906107f7565b60405180910390f35b3480156100ed57600080fd5b506100f661053d565b60405161010391906107f7565b60405180910390f35b34801561011857600080fd5b50610121610542565b60405161012e9190610871565b60405180910390f35b61013f6101a9565b005b34801561014d57600080fd5b50610156610568565b604051610163919061089b565b60405180910390f35b34801561017857600080fd5b50610193600480360381019061018e91906108e2565b61058c565b6040516101a0919061089b565b60405180910390f35b6000339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506014610243600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16346105cb90919063ffffffff16565b1015610284576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161027b9061096c565b60405180910390fd5b34600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546102d391906109bb565b92505081905550565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461036a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161036190610a5d565b60405180910390fd5b60005b60008054905081101561041557600080828154811061038f5761038e610a7d565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061040d90610aac565b91505061036d565b50600067ffffffffffffffff81111561043157610430610af5565b5b60405190808252806020026020018201604052801561045f5781602001602082028036833780820191505090505b50600090805190602001906104759291906106a7565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161049c90610b55565b60006040518083038185875af1925050503d80600081146104d9576040519150601f19603f3d011682016040523d82523d6000602084013e6104de565b606091505b5050905080610522576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161051990610bb6565b60405180910390fd5b50565b60016020528060005260406000206000915090505481565b601481565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b7f000000000000000000000000000000000000000000000000000000000000000081565b6000818154811061059c57600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000806105d783610607565b90506000670de0b6b3a764000085836105f09190610bd6565b6105fa9190610c5f565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561065057600080fd5b505afa158015610664573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106889190610d1d565b5050509150506402540be4008161069f9190610d98565b915050919050565b828054828255906000526020600020908101928215610720579160200282015b8281111561071f5782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550916020019190600101906106c7565b5b50905061072d9190610731565b5090565b5b8082111561074a576000816000905550600101610732565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061077e82610753565b9050919050565b61078e81610773565b811461079957600080fd5b50565b6000813590506107ab81610785565b92915050565b6000602082840312156107c7576107c661074e565b5b60006107d58482850161079c565b91505092915050565b6000819050919050565b6107f1816107de565b82525050565b600060208201905061080c60008301846107e8565b92915050565b6000819050919050565b600061083761083261082d84610753565b610812565b610753565b9050919050565b60006108498261081c565b9050919050565b600061085b8261083e565b9050919050565b61086b81610850565b82525050565b60006020820190506108866000830184610862565b92915050565b61089581610773565b82525050565b60006020820190506108b0600083018461088c565b92915050565b6108bf816107de565b81146108ca57600080fd5b50565b6000813590506108dc816108b6565b92915050565b6000602082840312156108f8576108f761074e565b5b6000610906848285016108cd565b91505092915050565b600082825260208201905092915050565b7f4469646e742073656e6420656e6f756768000000000000000000000000000000600082015250565b600061095660118361090f565b915061096182610920565b602082019050919050565b6000602082019050818103600083015261098581610949565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006109c6826107de565b91506109d1836107de565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610a0657610a0561098c565b5b828201905092915050565b7f53656e646572206e6f74204f776e657200000000000000000000000000000000600082015250565b6000610a4760108361090f565b9150610a5282610a11565b602082019050919050565b60006020820190508181036000830152610a7681610a3a565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000610ab7826107de565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610aea57610ae961098c565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610b3f600083610b24565b9150610b4a82610b2f565b600082019050919050565b6000610b6082610b32565b9150819050919050565b7f43616c6c204661696c6572000000000000000000000000000000000000000000600082015250565b6000610ba0600b8361090f565b9150610bab82610b6a565b602082019050919050565b60006020820190508181036000830152610bcf81610b93565b9050919050565b6000610be1826107de565b9150610bec836107de565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610c2557610c2461098c565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610c6a826107de565b9150610c75836107de565b925082610c8557610c84610c30565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610caf81610c90565b8114610cba57600080fd5b50565b600081519050610ccc81610ca6565b92915050565b6000819050919050565b610ce581610cd2565b8114610cf057600080fd5b50565b600081519050610d0281610cdc565b92915050565b600081519050610d17816108b6565b92915050565b600080600080600060a08688031215610d3957610d3861074e565b5b6000610d4788828901610cbd565b9550506020610d5888828901610cf3565b9450506040610d6988828901610d08565b9350506060610d7a88828901610d08565b9250506080610d8b88828901610cbd565b9150509295509295909350565b6000610da382610cd2565b9150610dae83610cd2565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615610ded57610dec61098c565b5b817f80000000000000000000000000000000000000000000000000000000000000000583126000841260008413161615610e2a57610e2961098c565b5b827f80000000000000000000000000000000000000000000000000000000000000000582126000841360008412161615610e6757610e6661098c565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0582126000841260008412161615610ea457610ea361098c565b5b82820290509291505056fea264697066735822122014723e2cba7dbe4b95bb4408853f641a785e99df296310dffce8ac4c82b42ff564736f6c63430008080033",
  "deployedBytecode": "0x6080604052600436106100745760003560e01c8063741bef1a1161004e578063741bef1a1461010c578063b60d428814610137578063dba6335f14610141578063dc0d3dff1461016c57610083565b80633ccfd60b1461008d5780633e47d6f3146100a45780636b69a592146100e157610083565b36610083576100816101a9565b005b61008b6101a9565b005b34801561009957600080fd5b506100a26102dc565b005b3480156100b057600080fd5b506100cb60048036038101906100c691906107b1565b610525565b6040516100d891906107f7565b60405180910390f35b3480156100ed57600080fd5b506100f661053d565b60405161010391906107f7565b60405180910390f35b34801561011857600080fd5b50610121610542565b60405161012e9190610871565b60405180910390f35b61013f6101a9565b005b34801561014d57600080fd5b50610156610568565b604051610163919061089b565b60405180910390f35b34801561017857600080fd5b50610193600480360381019061018e91906108e2565b61058c565b6040516101a0919061089b565b60405180910390f35b6000339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506014610243600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16346105cb90919063ffffffff16565b1015610284576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161027b9061096c565b60405180910390fd5b34600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546102d391906109bb565b92505081905550565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461036a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161036190610a5d565b60405180910390fd5b60005b60008054905081101561041557600080828154811061038f5761038e610a7d565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061040d90610aac565b91505061036d565b50600067ffffffffffffffff81111561043157610430610af5565b5b60405190808252806020026020018201604052801561045f5781602001602082028036833780820191505090505b50600090805190602001906104759291906106a7565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161049c90610b55565b60006040518083038185875af1925050503d80600081146104d9576040519150601f19603f3d011682016040523d82523d6000602084013e6104de565b606091505b5050905080610522576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161051990610bb6565b60405180910390fd5b50565b60016020528060005260406000206000915090505481565b601481565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b7f000000000000000000000000000000000000000000000000000000000000000081565b6000818154811061059c57600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000806105d783610607565b90506000670de0b6b3a764000085836105f09190610bd6565b6105fa9190610c5f565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561065057600080fd5b505afa158015610664573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106889190610d1d565b5050509150506402540be4008161069f9190610d98565b915050919050565b828054828255906000526020600020908101928215610720579160200282015b8281111561071f5782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550916020019190600101906106c7565b5b50905061072d9190610731565b5090565b5b8082111561074a576000816000905550600101610732565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061077e82610753565b9050919050565b61078e81610773565b811461079957600080fd5b50565b6000813590506107ab81610785565b92915050565b6000602082840312156107c7576107c661074e565b5b60006107d58482850161079c565b91505092915050565b6000819050919050565b6107f1816107de565b82525050565b600060208201905061080c60008301846107e8565b92915050565b6000819050919050565b600061083761083261082d84610753565b610812565b610753565b9050919050565b60006108498261081c565b9050919050565b600061085b8261083e565b9050919050565b61086b81610850565b82525050565b60006020820190506108866000830184610862565b92915050565b61089581610773565b82525050565b60006020820190506108b0600083018461088c565b92915050565b6108bf816107de565b81146108ca57600080fd5b50565b6000813590506108dc816108b6565b92915050565b6000602082840312156108f8576108f761074e565b5b6000610906848285016108cd565b91505092915050565b600082825260208201905092915050565b7f4469646e742073656e6420656e6f756768000000000000000000000000000000600082015250565b600061095660118361090f565b915061096182610920565b602082019050919050565b6000602082019050818103600083015261098581610949565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006109c6826107de565b91506109d1836107de565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610a0657610a0561098c565b5b828201905092915050565b7f53656e646572206e6f74204f776e657200000000000000000000000000000000600082015250565b6000610a4760108361090f565b9150610a5282610a11565b602082019050919050565b60006020820190508181036000830152610a7681610a3a565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000610ab7826107de565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610aea57610ae961098c565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610b3f600083610b24565b9150610b4a82610b2f565b600082019050919050565b6000610b6082610b32565b9150819050919050565b7f43616c6c204661696c6572000000000000000000000000000000000000000000600082015250565b6000610ba0600b8361090f565b9150610bab82610b6a565b602082019050919050565b60006020820190508181036000830152610bcf81610b93565b9050919050565b6000610be1826107de565b9150610bec836107de565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610c2557610c2461098c565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610c6a826107de565b9150610c75836107de565b925082610c8557610c84610c30565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610caf81610c90565b8114610cba57600080fd5b50565b600081519050610ccc81610ca6565b92915050565b6000819050919050565b610ce581610cd2565b8114610cf057600080fd5b50565b600081519050610d0281610cdc565b92915050565b600081519050610d17816108b6565b92915050565b600080600080600060a08688031215610d3957610d3861074e565b5b6000610d4788828901610cbd565b9550506020610d5888828901610cf3565b9450506040610d6988828901610d08565b9350506060610d7a88828901610d08565b9250506080610d8b88828901610cbd565b9150509295509295909350565b6000610da382610cd2565b9150610dae83610cd2565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615610ded57610dec61098c565b5b817f80000000000000000000000000000000000000000000000000000000000000000583126000841260008413161615610e2a57610e2961098c565b5b827f80000000000000000000000000000000000000000000000000000000000000000582126000841360008412161615610e6757610e6661098c565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0582126000841260008412161615610ea457610ea361098c565b5b82820290509291505056fea264697066735822122014723e2cba7dbe4b95bb4408853f641a785e99df296310dffce8ac4c82b42ff564736f6c63430008080033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 58,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "funders",
        "offset": 0,
        "slot": "0",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 62,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "addressToAmountFunded",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 65,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "priceFeed",
        "offset": 0,
        "slot": "2",
        "type": "t_contract(AggregatorV3Interface)45"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_contract(AggregatorV3Interface)45": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}